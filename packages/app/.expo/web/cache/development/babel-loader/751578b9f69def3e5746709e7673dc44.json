{"ast":null,"code":"var _jsxFileName = \"/home/tama/vscode/monorepo/CRA-and-Expo-app-with-TypeGraphQL-Auth/packages/app/src/modules/Navigation.tsx\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AccountStack from \"./navigation/AccountStack\";\nimport Authentication from \"./navigation/Authentication\";\nimport { useQuery } from '@apollo/client';\nimport { USER } from \"../utils\";\nvar Stack = createStackNavigator();\n\nvar Navigation = function Navigation() {\n  var _useQuery = useQuery(USER),\n      data = _useQuery.data;\n\n  var user = data.user;\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"auth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, !user.isAuth ? React.createElement(Stack.Screen, {\n    name: \"auth\",\n    options: {\n      headerShown: false\n    },\n    component: Authentication,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: \"user\",\n    options: {\n      headerShown: false\n    },\n    component: AccountStack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["/home/tama/vscode/monorepo/CRA-and-Expo-app-with-TypeGraphQL-Auth/packages/app/src/modules/Navigation.tsx"],"names":["React","NavigationContainer","createStackNavigator","AccountStack","Authentication","useQuery","USER","Stack","Navigation","data","user","isAuth","headerShown"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,IAAT;AAEA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;AAEA,IAAMM,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACJH,QAAQ,CAACC,IAAD,CADJ;AAAA,MACbG,IADa,aACbA,IADa;;AAErB,MAAMC,IAAU,GAAGD,IAAI,CAACC,IAAxB;AACA,SACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACA,IAAI,CAACC,MAAN,GACG,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,OAAO,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAnC;AAA2D,IAAA,SAAS,EAAER,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAGG,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,OAAO,EAAE;AAAEQ,MAAAA,WAAW,EAAE;AAAf,KAAnC;AAA2D,IAAA,SAAS,EAAET,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CADJ,CADJ;AAWH,CAdD;;AAgBA,eAAeK,UAAf","sourcesContent":["import React from 'react'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AccountStack from './navigation/AccountStack';\nimport Authentication from './navigation/Authentication';\nimport { useQuery } from '@apollo/client';\nimport { USER, User } from '../utils';\n\nconst Stack = createStackNavigator();\n\nconst Navigation = () => {\n    const { data } = useQuery(USER);\n    const user: User = data.user;\n    return (\n        <NavigationContainer>\n            <Stack.Navigator initialRouteName=\"auth\">\n                {!user.isAuth ?\n                    <Stack.Screen name=\"auth\" options={{ headerShown: false }} component={Authentication} />\n                    :\n                    <Stack.Screen name=\"user\" options={{ headerShown: false }} component={AccountStack} />\n                }\n            </Stack.Navigator>\n        </NavigationContainer>\n    )\n}\n\nexport default Navigation\n"]},"metadata":{},"sourceType":"module"}