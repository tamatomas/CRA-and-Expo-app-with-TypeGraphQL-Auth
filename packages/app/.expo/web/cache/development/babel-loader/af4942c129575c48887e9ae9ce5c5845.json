{"ast":null,"code":"var _jsxFileName = \"/home/tama/vscode/monorepo/CRA-and-Expo-app-with-TypeGraphQL-Auth/packages/app/src/modules/Screens/auth/Signin.tsx\";\nimport React from 'react';\nimport { Layout, Icon, Text, Input, Button } from \"@ui-kitten/components\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LoginWrapper } from \"@init/controller\";\nimport { userVar } from \"../../../utils\";\n\nvar Signin = function Signin(props) {\n  var setIsAuth = function setIsAuth(result) {\n    userVar({\n      isAuth: result\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Layout, {\n    style: styles.layout,\n    level: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"person-outline\",\n    style: styles.icon,\n    fill: \"#000000\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    category: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Sign in\"), React.createElement(LoginWrapper, {\n    callback: function callback(result) {\n      return setIsAuth(result);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, function (_ref) {\n    var handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        handleSubmit = _ref.handleSubmit,\n        values = _ref.values,\n        mutationError = _ref.mutationError;\n    return React.createElement(React.Fragment, null, React.createElement(Input, {\n      placeholder: \"Email\",\n      label: \"Email:\",\n      size: \"large\",\n      onBlur: handleBlur(\"email\"),\n      onChangeText: handleChange(\"email\"),\n      value: values.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }), React.createElement(Input, {\n      placeholder: \"Password\",\n      label: \"Password:\",\n      secureTextEntry: true,\n      size: \"large\",\n      onBlur: handleBlur(\"password\"),\n      onChangeText: handleChange(\"password\"),\n      value: values.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      category: \"s2\",\n      appearance: \"hint\",\n      status: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, mutationError == null ? void 0 : mutationError.message), React.createElement(Button, {\n      style: styles.submit,\n      onPress: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, \"SIGN IN\"));\n  })), React.createElement(Layout, {\n    level: \"1\",\n    style: styles.buttongroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    appearance: \"ghost\",\n    size: \"small\",\n    onPress: function onPress() {\n      return props.navigation.navigate('ForgotPassword');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Forgot Password?\"), React.createElement(Button, {\n    appearance: \"ghost\",\n    size: \"small\",\n    onPress: function onPress() {\n      return props.navigation.navigate('Signup');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Don\\xB4t have an account? Sign Up\")));\n};\n\nexport default Signin;\nvar styles = StyleSheet.create({\n  layout: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 24\n  },\n  icon: {\n    width: 42,\n    height: 42\n  },\n  buttongroup: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: 24\n  },\n  submit: {\n    width: 260,\n    marginTop: 12\n  }\n});","map":{"version":3,"sources":["/home/tama/vscode/monorepo/CRA-and-Expo-app-with-TypeGraphQL-Auth/packages/app/src/modules/Screens/auth/Signin.tsx"],"names":["React","Layout","Icon","Text","Input","Button","LoginWrapper","userVar","Signin","props","setIsAuth","result","isAuth","styles","layout","icon","handleChange","handleBlur","handleSubmit","values","mutationError","email","password","message","submit","buttongroup","navigation","navigate","StyleSheet","create","flex","alignItems","justifyContent","padding","width","height","display","flexDirection","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Layout, Icon, Text, Input, Button } from \"@ui-kitten/components\"\nimport { StyleSheet } from 'react-native'\nimport { AuthNavProps } from 'modules/navigation/AuthParamList'\nimport { LoginWrapper } from \"@init/controller\"\nimport { userVar } from '../../../utils'\n\ninterface Props extends AuthNavProps<'Signin'> {\n\n}\n\nconst Signin = (props: Props) => {\n    const setIsAuth = (result: boolean) => {\n        userVar({ isAuth: result });\n    }\n    return (\n        <>\n            <Layout style={styles.layout} level=\"1\">\n                <Icon name=\"person-outline\" style={styles.icon} fill=\"#000000\" />\n                <Text category=\"h6\">\n                    Sign in\n                </Text>\n                <LoginWrapper callback={(result: boolean) => setIsAuth(result)}>\n                    {({ handleChange, handleBlur, handleSubmit, values, mutationError }) => (\n                        <>\n                            <Input\n                                placeholder=\"Email\"\n                                label=\"Email:\"\n                                size=\"large\"\n                                onBlur={handleBlur(\"email\")}\n                                onChangeText={handleChange(\"email\")}\n                                value={values.email}\n                            />\n                            <Input\n                                placeholder=\"Password\"\n                                label=\"Password:\"\n                                secureTextEntry\n                                size=\"large\"\n                                onBlur={handleBlur(\"password\")}\n                                onChangeText={handleChange(\"password\")}\n                                value={values.password}\n                            />\n                            <Text category=\"s2\" appearance=\"hint\" status=\"danger\">{mutationError?.message}</Text>\n                            <Button style={styles.submit} onPress={handleSubmit}>SIGN IN</Button>\n                        </>\n                    )}\n                </LoginWrapper>\n            </Layout>\n            <Layout level=\"1\" style={styles.buttongroup}>\n                <Button appearance=\"ghost\" size=\"small\" onPress={() => props.navigation.navigate('ForgotPassword')} >Forgot Password?</Button>\n                <Button appearance=\"ghost\" size=\"small\" onPress={() => props.navigation.navigate('Signup')} >Don´t have an account? Sign Up</Button>\n            </Layout>\n        </>\n    )\n}\n\nexport default Signin\n\nconst styles = StyleSheet.create({\n    layout: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 24\n    },\n    icon: {\n        width: 42,\n        height: 42\n    },\n    buttongroup: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        padding: 24\n    },\n    submit: {\n        width: 260,\n        marginTop: 12\n    }\n});"]},"metadata":{},"sourceType":"module"}